              Mis Documentos
              {!loadingMy && myDocuments.length > 0 && (
                <span className="badge badge-info">{myDocuments.length}</span>
              )}
            </button>
          </div>

          {/* Upload Section */}
          {activeTab === 'upload' && (
            <div className="section upload-section">
              <div className="section-card">
                <div className="card-header">
                  <h2>Subir nuevo documento</h2>
                  <p>Sube un documento PDF para que sea firmado por los participantes</p>
                </div>

                <form onSubmit={handleUpload} className="upload-form">
                  {uploadSuccess && (
                    <div className="success-message">
                      <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M9 12L11 14L15 10M21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12Z" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                      </svg>
                      <span>Documento subido exitosamente</span>
                    </div>
                  )}

                  {error && (
                    <div className="error-message">
                      <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M12 8V12M12 16H12.01M21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12Z" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                      </svg>
                      <span>{error}</span>
                    </div>
                  )}

                  <div className="form-group">
                    <label htmlFor="document-title">Nombre del conjunto (opcional)</label>
                    <input
                      type="text"
                      id="document-title"
                      value={documentTitle}
                      onChange={(e) => setDocumentTitle(e.target.value)}
                      placeholder="Ej: Contrato de servicios 2024 (conjunto)"
                      className="form-input"
                      disabled={uploading}
                    />
                  </div>

                  <div className="form-group">
                    <label htmlFor="document-description">Descripción (opcional)</label>
                    <textarea
                      id="document-description"
                      value={documentDescription}
                      onChange={(e) => setDocumentDescription(e.target.value)}
                      placeholder="Describe brevemente el documento..."
                      className="form-input form-textarea"
                      rows="3"
                      disabled={uploading}
                    />
                  </div>

                  <div className="form-group">
                    <label htmlFor="file-input">Archivo PDF</label>
                    <div
                      className={`file-drop-zone ${isDragging ? 'dragging' : ''} ${(selectedFile || (selectedFiles && selectedFiles.length > 0)) ? 'has-file' : ''}`}
                      onDragEnter={handleDragEnter}
                      onDragLeave={handleDragLeave}
                      onDragOver={handleDragOver}
                      onDrop={handleDrop}
                    >
                      <input
                        type="file"
                        id="file-input"
                        onChange={(e) => handleFileChange(e)}
                        multiple
                        accept=".pdf,application/pdf"
                        className="file-input"
                        disabled={uploading}
                      />

                      {!selectedFile && (!selectedFiles || selectedFiles.length === 0) ? (
                        <label htmlFor="file-input" className="file-drop-label">
                          <div className="file-drop-icon">
                            <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                              <path d="M7 18C4.79086 18 3 16.2091 3 14C3 11.7909 4.79086 10 7 10C7 7.23858 9.23858 5 12 5C14.7614 5 17 7.23858 17 10C19.2091 10 21 11.7909 21 14C21 16.2091 19.2091 18 17 18H7Z" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                              <path d="M12 12V19M12 12L9 15M12 12L15 15" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                            </svg>
                          </div>
                          <div className="file-drop-text">
                            <p className="file-drop-title">
                              {isDragging ? 'Suelta el archivo aquí' : 'Arrastra tu PDF aquí'}
                            </p>
                            <p className="file-drop-subtitle">
                              o <span className="file-drop-link">haz clic para seleccionar</span>
                            </p>
                          </div>
                        </label>
                      ) : (
                        <div className="file-selected">
                          <div className="file-selected-icon">
                            <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                              <path d="M14 2H6C5.46957 2 4.96086 2.21071 4.58579 2.58579C4.21071 2.96086 4 3.46957 4 4V20C4 20.5304 4.21071 21.0391 4.58579 21.4142C4.96086 21.7893 5.46957 22 6 22H18C18.5304 22 19.0391 21.7893 19.4142 21.4142C19.7893 21.0391 20 20.5304 20 20V8L14 2Z" fill="#DC2626"/>
                              <path d="M14 2V8H20" stroke="white" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                              <path d="M12 18V12M12 12L9 15M12 12L15 15" stroke="white" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                            </svg>
                          </div>
                          <div className="file-selected-info">
                            <p className="file-selected-name">{selectedFile?.name || (selectedFiles && selectedFiles[0]?.name) || ''}</p>
                            <p className="file-selected-size">
                              {(() => { const f = selectedFile || (selectedFiles && selectedFiles[0]); return f ? (f.size / 1024 / 1024).toFixed(2) + ' MB' : '' })()}
                            </p>
                            {selectedFiles && selectedFiles.length > 0 && (
                              <div className="file-list-preview">
                                {selectedFiles.map((f, idx) => (
                                  <div key={idx} className="file-item-preview" style={{ display: "flex", justifyContent: "space-between", gap: "12px" }}>
                                    <span className="file-name">{f.name}</span>
                                    <span className="file-size">{(f.size / 1024 / 1024).toFixed(2)} MB</span>
                                  </div>
                                ))}
                              </div>
                            )}
                          </div>
                          <button
                            type="button"
                            className="file-remove-button"
                            onClick={() => {
                              setSelectedFile(null);
                              setSelectedFiles([]);
                              const fileInput = document.getElementById('file-input');
                              if (fileInput) fileInput.value = '';
                            }}
                            disabled={uploading}
                          >
                            <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                              <path d="M18 6L6 18M6 6L18 18" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                            </svg>
                          </button>
                        </div>
                      )}
                  </div>

                  {/* Sección de selección de firmantes */}
                  <div className="form-group signers-section">
                    <label>Seleccionar firmantes</label>
                    <p className="help-text">Elige las personas que deben firmar este documento</p>

                    {loadingSigners ? (
                      <div className="signers-loading">
                        <span className="button-spinner"></span>
                        <span>Cargando firmantes...</span>
                      </div>
                    ) : (
                      <>
                        <div className="signers-actions">
                          <button
                            type="button"
                            className="signers-action-btn"
                            onClick={selectAllSigners}
                            disabled={uploading || availableSigners.length === 0}
                          >
                            Seleccionar todos
                          </button>
                          <button
                            type="button"
                            className="signers-action-btn"
                            onClick={clearSelectedSigners}
                            disabled={uploading || selectedSigners.length === 0}
                          >
                            Limpiar selección
                          </button>
                          <span className="signers-count">
                            {selectedSigners.length} de {availableSigners.length} seleccionados
                          </span>
                        </div>

                        <div className="signers-list">
                          {availableSigners.length === 0 ? (
                            <div className="signers-empty">
                              <p>No hay usuarios disponibles para seleccionar como firmantes</p>
                            </div>
                          ) : (
                            availableSigners.map(signer => (
                              <div
                                key={signer.id}
                                className={`signer-item ${selectedSigners.includes(signer.id) ? 'selected' : ''}`}
                                onClick={() => !uploading && toggleSigner(signer.id)}
                              >
                                <div className="signer-checkbox">
                                  {selectedSigners.includes(signer.id) && (
                                    <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                      <path d="M20 6L9 17L4 12" stroke="currentColor" strokeWidth="3" strokeLinecap="round" strokeLinejoin="round"/>
                                    </svg>
                                  )}
                                </div>
                                <div className="signer-info">
                                  <div className="signer-avatar">
                                    {signer.name.charAt(0).toUpperCase()}
                                  </div>
                                  <div className="signer-details">
                                    <p className="signer-name">{signer.name}</p>
                                    <p className="signer-email">{signer.email}</p>
                                  </div>
                                </div>
                                <div className="signer-role">
                                  <span className={`role-badge role-${signer.role}`}>
                                    {signer.role === 'admin' ? 'Admin' : 'Usuario'}
                                  </span>
                                </div>
                              </div>
                            ))
                          )}
                        </div>
                      </>
                    )}
                  </div>

                  <button
                    type="submit"
                    className="submit-button"
                    disabled={uploading || (((selectedFiles && selectedFiles.length) || 0) === 0 && !selectedFile) || selectedSigners.length === 0}
                  >
                    {uploading ? (
                      <>
                        <span className="button-spinner"></span>
                        <span>Subiendo...</span>
                      </>
                    ) : (
                      <>
                        <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                          <path d="M21 15V19C21 19.5304 20.7893 20.0391 20.4142 20.4142C20.0391 20.7893 19.5304 21 19 21H5C4.46957 21 3.96086 20.7893 3.58579 20.4142C3.21071 20.0391 3 19.5304 3 19V15M17 8L12 3M12 3L7 8M12 3V15" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                        </svg>
                        <span>Subir Documento</span>
                      </>
                    )}
                  </button>
                </form>
